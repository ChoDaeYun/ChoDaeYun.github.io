I"H]<h1 id="애플로그인-적용을-해야-하는가">애플로그인 적용을 해야 하는가…</h1>
<p>IOS 앱의 경우 소셜로그인을 기존에 사용하고 있다면 2020년 4월부터는 애플로그인을 붙여 하는 이슈가 있습니다. <br />
이런 이슈에 대한 준비를 하기 위해 늦었지만 자바 백엔드에서 애플 로그인시 확인이 필요 한 부분에 대해서 한번 볼까 합니다.  <br />
<a href="https://developer.apple.com/kr/news/?id=09122019b" target="_blank">Apple로 로그인에 대한 신규 가이드 ( 2019년 09월 12일)</a><br />
<a href="https://developer.apple.com/kr/app-store/review/guidelines/" target="_blank">App Strore 심사 지침서 </a><br /></p>

<p>설정에 대한 부분은 우선 일부 내용을 넘어 갈까 합니다.  <br />
구글검색에서 워낙 많이들 검색이 되고 있어 굳이 언급할 필요는 없을 듯 합니다. <br /></p>

<p>IOS 앱 내에서 로그인 아이디 비밀번호 확인이 끝난뒤에 진행되는 흐름은 다음 이미지와 같습니다. 
<img src="/assets/images/884cba8b-78cd-4bb1-91af-909591ece5dd.png" width="452" height="auto" />
https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/verifying_a_user</p>

<p>쉽게 앱에서 API서버로 authorization code 값을 보내고 해당 code 값을 가지고 정상적인 로그인 접근인지를 확인하라는 내용입니다. <br />
애플 가이드대로라면 백엔드 서버에서 두가지 처리요소만 준비 하면됩니다.</p>
<ol>
  <li>Authorization code 값 인증 하기  - 로그인 또는 회원가입시 인증에 사용되는 코드 ( 일회성으로 API호출시 새로운 Authorization code 가 발급됩니다. (api 호출하면 accesstoken 값이 authoriztion code 값이다 ))</li>
  <li>refresh token 검증하기  - 서비스 중 애플에서 연동이 된 계정이 맞는지 확인할때 사용된다.  하루에 한번 정도만 호출하라고 가이드가 되어 있다.</li>
</ol>

<p>Generate and validate tokens URL : <a href="https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens">애플 가이드</a>
Apple Api URL : https://appleid.apple.com/auth/token</p>

<h1 id="사용한-의존성">사용한 의존성</h1>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c">&lt;!-- JJWT --&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>io.jsonwebtoken<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jjwt-api<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>0.10.7<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>        
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>io.jsonwebtoken<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jjwt-impl<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>0.10.7<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>io.jsonwebtoken<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>jjwt-jackson<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>0.10.7<span class="nt">&lt;/version&gt;</span>
            <span class="nt">&lt;scope&gt;</span>runtime<span class="nt">&lt;/scope&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="c">&lt;!-- openssl  --&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.bouncycastle<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>bcpkix-jdk15on<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.61<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
        <span class="c">&lt;!-- unirest-java  --&gt;</span>
        <span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>com.mashape.unirest<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>unirest-java<span class="nt">&lt;/artifactId&gt;</span>
            <span class="nt">&lt;version&gt;</span>1.4.9<span class="nt">&lt;/version&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<h1 id="기본-공통">기본 공통</h1>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">AUTH_TOKEN</span> <span class="o">=</span> <span class="s">"https://appleid.apple.com/auth/token"</span><span class="o">;</span>   
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">TEAM_ID</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span> <span class="c1">// 애플 개발자 센터에 등록한 TEAM ID </span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">CLIENT_ID</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span> <span class="c1">//애플 개발자 센터에서 등록시 app , servier id ( ios 와 web&amp;android 각각 발급받아야 서비스 이용 가능합니다.)</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">KEY_ID</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span> <span class="c1">// 키 ID ( 잘모르면 p8 파일 받을때 AuthKey_{KEY_ID}.p8 파일명 적혀 있습니다. )</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">PrivateKey</span> <span class="n">pKey</span><span class="o">;</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">PrivateKey</span> <span class="nf">getPrivateKey</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>        
         
        <span class="kd">final</span> <span class="nc">PEMParser</span> <span class="n">pemParser</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PEMParser</span><span class="o">(</span><span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"애플설정시 다운로드 받은 p8파일 경로"</span><span class="o">));</span>
        <span class="kd">final</span> <span class="nc">JcaPEMKeyConverter</span> <span class="n">converter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JcaPEMKeyConverter</span><span class="o">();</span>
        <span class="kd">final</span> <span class="nc">PrivateKeyInfo</span> <span class="n">object</span> <span class="o">=</span> <span class="o">(</span><span class="nc">PrivateKeyInfo</span><span class="o">)</span> <span class="n">pemParser</span><span class="o">.</span><span class="na">readObject</span><span class="o">();</span>
        <span class="kd">final</span> <span class="nc">PrivateKey</span> <span class="n">pKey</span> <span class="o">=</span> <span class="n">converter</span><span class="o">.</span><span class="na">getPrivateKey</span><span class="o">(</span><span class="n">object</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">pKey</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">generateJWT</span><span class="o">(</span><span class="nc">Boolean</span> <span class="n">webBool</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">pKey</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">pKey</span> <span class="o">=</span> <span class="n">getPrivateKey</span><span class="o">();</span>
      <span class="o">}</span>
      <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="nc">Jwts</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">setHeaderParam</span><span class="o">(</span><span class="nc">JwsHeader</span><span class="o">.</span><span class="na">KEY_ID</span><span class="o">,</span> <span class="no">KEY_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setIssuer</span><span class="o">(</span><span class="no">TEAM_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setAudience</span><span class="o">(</span><span class="s">"https://appleid.apple.com"</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="no">CLIENT_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setExpiration</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">+</span> <span class="o">(</span><span class="mi">1000</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">10</span><span class="o">)))</span>
              <span class="o">.</span><span class="na">setIssuedAt</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()))</span>
              <span class="o">.</span><span class="na">signWith</span><span class="o">(</span><span class="n">pKey</span><span class="o">,</span><span class="nc">SignatureAlgorithm</span><span class="o">.</span><span class="na">ES256</span><span class="o">)</span>
              <span class="o">.</span><span class="na">compact</span><span class="o">();</span>
      <span class="k">return</span> <span class="n">token</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">generateJWT</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">pKey</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">pKey</span> <span class="o">=</span> <span class="n">getPrivateKey</span><span class="o">();</span>
      <span class="o">}</span>
      <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="nc">Jwts</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">setHeaderParam</span><span class="o">(</span><span class="nc">JwsHeader</span><span class="o">.</span><span class="na">KEY_ID</span><span class="o">,</span> <span class="no">KEY_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setIssuer</span><span class="o">(</span><span class="no">TEAM_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setAudience</span><span class="o">(</span><span class="s">"https://appleid.apple.com"</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setSubject</span><span class="o">(</span><span class="no">CLIENT_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">setExpiration</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">+</span> <span class="o">(</span><span class="mi">1000</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">10</span><span class="o">)))</span>
              <span class="o">.</span><span class="na">setIssuedAt</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()))</span>
              <span class="o">.</span><span class="na">signWith</span><span class="o">(</span><span class="n">pKey</span><span class="o">,</span><span class="nc">SignatureAlgorithm</span><span class="o">.</span><span class="na">ES256</span><span class="o">)</span>
              <span class="o">.</span><span class="na">compact</span><span class="o">();</span>
      <span class="k">return</span> <span class="n">token</span><span class="o">;</span>
    <span class="o">}</span>

</code></pre></div></div>
<h1 id="authorization-code-인증하기">Authorization code 인증하기</h1>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">authToken</span><span class="o">(</span><span class="nc">String</span> <span class="n">code</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
    <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">generateJWT</span><span class="o">();</span>

    <span class="nc">HttpResponse</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="nc">Unirest</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="no">AUTH_TOKEN</span><span class="o">)</span>
                  <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/x-www-form-urlencoded"</span><span class="o">)</span>
          <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"client_id"</span><span class="o">,</span> <span class="no">CLIENT_ID</span><span class="o">)</span>
          <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"client_secret"</span><span class="o">,</span> <span class="n">token</span><span class="o">)</span>
          <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"grant_type"</span><span class="o">,</span> <span class="s">"authorization_code"</span><span class="o">)</span>
          <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"code"</span><span class="o">,</span> <span class="n">code</span><span class="o">)</span>
              <span class="o">.</span><span class="na">asString</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getStatus</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getBody</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></div></div>
<p>이때 리턴된 전달 된 값을 통해 authorization code 그리고 refresh token , apple id ,email 값을 확인 할 수 있습니다.
(이름의 경우 ios에서 전달을 해주어야 합니다. )</p>

<h1 id="refresh-token-검증-하기">Refresh Token 검증 하기</h1>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">authRefreshToken</span><span class="o">(</span><span class="nc">String</span> <span class="n">refreshToken</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
    <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">generateJWT</span><span class="o">();</span>
    <span class="nc">HttpResponse</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">response</span> <span class="o">=</span> <span class="nc">Unirest</span><span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="no">AUTH_TOKEN</span><span class="o">)</span>
                  <span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/x-www-form-urlencoded"</span><span class="o">)</span>
              <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"client_id"</span><span class="o">,</span> <span class="no">CLIENT_ID</span><span class="o">)</span>
              <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"client_secret"</span><span class="o">,</span> <span class="n">token</span><span class="o">)</span>
              <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"grant_type"</span><span class="o">,</span> <span class="s">"refresh_token"</span><span class="o">)</span>
              <span class="o">.</span><span class="na">field</span><span class="o">(</span><span class="s">"refresh_token"</span><span class="o">,</span> <span class="n">refreshToken</span><span class="o">)</span>
              <span class="o">.</span><span class="na">asString</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getStatus</span><span class="o">());</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getBody</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></div></div>
<p>아무래도 1일 1회 호출이라는 가이드가 계속 눈에 밟히는데 
1일 1회 호출이라하면 결국 로그인이 유지 되는 서비스의 경우 24시간 이후 연결이 끊어 지는게 반영이 된다. 
단 애플 기기를 통하여 로그인 하였다면 즉시 반영이 가능하다.<br />( 애플서버 -&gt; IOS 기기 호출 , 웹과 안드로이드만 했다면 … 지원이 안되는거 같아 보입니다. )</p>

<h1 id="웹-애플로그인">웹 애플로그인</h1>
<p>안드로이드와 앱의 경우 IOS와 는 다른  CLIENT ID 값으로 로그인을 진행해주셔야지만 합니다. 
또한 로그인 사전에 로그인후 리다이렉트 URL 에 대한 설정 그리고 도메인 추가 작업이 필요 합니다.</p>

<h1 id="로그임-버튼-적용-하기">로그임 버튼 적용 하기</h1>
<p>Human Interface Guidelines (Button) : <a href="https://developer.apple.com/design/human-interface-guidelines/sign-in-with-apple/overview/buttons/" target="_blank">가이드</a><br />
(뭔가 까다롭다.. 거참.. 그러니…직접안만들고 제공해주는것을 사용하자.. )</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;style&gt;</span>
    <span class="nc">.signin-button</span> <span class="p">{</span>
        <span class="nl">width</span><span class="p">:</span> <span class="m">240px</span><span class="p">;</span>
        <span class="nl">height</span><span class="p">:</span> <span class="m">40px</span><span class="p">;</span>
    <span class="p">}</span>
<span class="nt">&lt;/style&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"input-group"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"appleid-signin"</span> <span class="na">class=</span><span class="s">"signin-button"</span> <span class="na">data-color=</span><span class="s">"black"</span> <span class="na">data-border=</span><span class="s">"false"</span> <span class="na">data-type=</span><span class="s">"sign in"</span><span class="nt">&gt;&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span><span class="nt">&gt;</span>
    <span class="nx">AppleID</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
        <span class="na">clientId</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">{CLIENT_ID}</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">scope</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">name email</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">redirectURI</span><span class="p">:</span> <span class="dl">'</span><span class="s1">{REDIRECT_URI}</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">state</span> <span class="p">:</span> <span class="dl">'</span><span class="s1">web</span><span class="dl">'</span>
    <span class="p">});</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<h1 id="authorization-code-인증하기-웹">Authorization code 인증하기 (웹)</h1>
<p>리다이렉트로 전달 받을 경우 POST로 내용이 전달 되며 전달되는 내용중 다음과 같은 값이 존재 하며 활용하면됩니다. <br />
code : authorization code 값
user : scope에서 이름과 이메일 요청한 경우 해당 값이 user라는 변수에 통해 전달이 됩니다. 
state : 웹,안드로이드에서 요청시 전달한 값 (안써도 로그인은 잘됩니다.)
전달하는 값이 틀릴뿐 결국 인증을 하는 방식은 동일하게 처리 됩니다.<br />
코드 생략 ….</p>

<p>대략적으로 위와 같은 기능들만 있으면 로그인 이나 회원가입시 기초 데이터를 받아 오는 부분에 대한 백엔드 준비는 완료 되는것입니다.</p>
:ET